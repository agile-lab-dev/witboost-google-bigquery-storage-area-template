apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: bigquery-storage-template.1
  title: Google BigQuery Storage Area Template
  description: Create a BigQuery Storage Area for storing data inside a System
  mesh:
    icon: https://images.icon-icons.com/2699/PNG/512/google_bigquery_logo_icon_168150.png
  tags:
    - storage
    - bigquery
    - google
  annotations:
    backstage.io/techdocs-ref: dir:.
spec:
  generates: componenttype:default/storage
  owner: agilelab
  type: storage
  parameters:
    - title: Google BigQuery Storage Area
      description: |-
        This template allows you to create a Google BigQuery Table. The schema is defined in the table to structure the data representation.

        After creation you can use the Editor Wizard to customize the component and add more details to the Storage Area
    - title: Component metadata
      description: Basic information for this component.
      required:
        - name
        - description
        - domain
        - parentRef
      properties:
        name:
          title: Name
          type: string
          description: Required. The name of the component.
          ui:field: EntityNamePicker
          default: BigQuery Storage Area
          ui:options:
            allowArbitraryValues: true
        description:
          title: Description
          type: string
          description: Help others understand what this Storage Area is for
          default: The Storage Area used internally by this System to organize and centralize the data accessed by its components and workloads.
        domain:
          title: Domain
          type: string
          description: Required. Domain of the System this Storage Area belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds: 
              - Domain
        parentRef:
          title: Parent
          type: string
          description: Required. The System this Storage Area belongs to, e.g. a Data Product. Be sure to choose the right one.
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
        identifier:
          title: Identifier
          type: string
          description: Autogenerated from the information above. A unique identifier for the component. It will not be editable after creation and is a string composed of [a-zA-Z] separated by any of [-_].
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        owner:
          title: Owner
          type: string
          description: Automatically selected from the Parent metadata. Parent owner.
          ui:field: EntitySelectionPicker
          ui:fieldName: parentRef
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Dependencies
          type: array
          description: A Storage Area could depend on other components in the same System. This information will be used to deploy the components in such an order that their dependencies already exist.
          default: []
          items:
            type: string
            ui:field: EntityComponentsPicker
            ui:fieldName: parentRef
            relation: hasPart
            ui:options:
              allowArbitraryValues: false
        tags:
          title: Tags
          type: array
          description: Tags for the component.
          default: []
          items:
            type: string   
        domainName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: domain
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden
        parentRefName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: parentRef
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden

    - title: Provide BigQuery table information
      description: |-
        Fill out the information about the target project and dataset where the table Storage Area will be created.
        You must also provide the name of the table to be created. If no value is provided for the **dataset** field, 
        an automatic value will be generated based on the domain, system name, major version, and deployment environment.
      required:
        - project
        - tableName
      properties:
        project:
          title: Project ID
          type: string
          description: Google BigQuery project ID where the dataset is stored
        dataset:
          title: Dataset name
          type: string
          description: Dataset name where the source table is stored and the table table will be created. If not provided
            it will be autogenerated
        tableName:
          title: Table name
          type: string
          description: Table name to create in the specified dataset


    - title: Table schema
      description: |-
        Define the schema of the Storage Area table. Primitive data types supported.
        
        The **Table** schema specifies the structure of the data that will be exposed through the Storage Area.  
        
        This schema will be used by the Storage Area to create a Google BigQuery table with the exact columns defined in this schema.

        You can modify the schema later in the **Edit** section.
      properties:
        schemaDefinition:
          type: object
          ui:options:
            displayTitle: false
          properties:
            schemaColumns:
              title: Column Definitions
              type: array
              ui:ArrayFieldTemplate: ArrayTableTemplate
              items:
                type: object
                ui:ObjectFieldTemplate: TableRowTemplate
                required:
                  - name
                  - dataType
                properties:
                  name:
                    type: string
                    title: Name
                  description:
                    type: string
                    title: Description
                  dataType:
                    type: string
                    default: STRING
                    title: Data Type
                    enum:
                      - STRING
                      - FLOAT
                      - NUMERIC
                      - BIGNUMERIC
                      - BOOLEAN
                      - TIMESTAMP
                      - DATE
                      - TIME
                      - DATETIME
                      - JSON
                      - GEOGRAPHY
                      - BYTES
                  constraint:
                    type: string
                    title: Mode
                    default: NULLABLE
                    enum:
                      - NULLABLE
                      - REQUIRED
                      - REPEATED
                allOf:
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: STRING
                            - const: BYTES
                    then:
                      properties:
                        dataLength:
                          title: Column Length
                          type: integer
                          description: Maximum length of column row
                          minimum: 0
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: NUMERIC
                            - const: BIGNUMERIC
                    then:
                      properties:
                        precision:
                          title: Precision
                          type: integer
                          description: Precision of the numeric data type
                          minimum: 1
                          maximum: 38
                          default: 38
                        scale:
                          title: Scale
                          type: integer
                          description: Scale of the numeric data type; cannot be greater than precision minus 1
                          minimum: 0
                          maximum: 38
                          default: 0
                        roundingMode:
                          title: Rounding mode
                          type: string
                          default: ROUNDING_MODE_UNSPECIFIED
                          enum:
                            - ROUNDING_MODE_UNSPECIFIED
                            - ROUND_HALF_AWAY_FROM_ZERO
                            - ROUND_HALF_EVEN


  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: '.'
        values:
          name: '${{ parameters.name }}'
          description: '${{ parameters.description }}'
          domain: '${{ parameters.domain }}'
          parentRef: '${{ parameters.parentRef }}'
          domainName: '${{ parameters.domainName }}'
          identifier: '${{ parameters.identifier }}'
          owner: '${{ parameters.owner }}'
          dependsOn: '${{ parameters.dependsOn }}'
          tags: '${{ parameters.tags }}'
          parentRefName: '${{ parameters.parentRefName }}'
          schema: '${{ parameters.schema }}'
          project: '${{ parameters.project }}'
          dataset: '${{ parameters.dataset }}'
          tableName: '${{ parameters.tableName }}'
          schemaColumns: '${{ parameters.schemaDefinition.schemaColumns }}'
          repoUrl: &repoUrl 'gitlab.com?owner=AgileDMBSandbox%2F${{orgname}}%2Fmesh.repository%2F${{ parameters.domain | replace(r/domain:| |-/, "") }}%2F${{ parameters.dataproduct.split(".")[1] | replace(r/ |-/g, "") }}&repo=${{ parameters.name.split(" ") | join("") | lower }}'
          useCaseTemplateId: urn:dmb:utm:google-bigquery-storage-template:0.0.0
          infrastructureTemplateId: urn:dmb:itm:google-bigquery-tech-adapter:0
          useCaseTemplateVersion: 0.0.0


    - id: publish
      name: Publish
      action: witboostMeshComponent:publish:gitlab
      input:
        allowedHosts: ['gitlab.com']
        description: 'This is ${{ parameters.name }}'
        repoUrl: *repoUrl
        rootDirectory: '.'
        parentRef: '${{ parameters.parentRef }}'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: '${{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: '/catalog-info.yaml'


  output:
    links:
      - title: Repository
        url: '${{ steps.publish.output.remoteUrl }}'
      - title: Open in catalog
        icon: catalog
        entityRef: '${{ steps.register.output.entityRef }}'